/*
** Степень многочлена
** Зависимостей с другими модулями нет, функционал реализуется сразу.
**
** Требование: оформлять функции (порядок аргументов и выходные данные) и использовать
** зависимые модули(если таковые есть) в точности с прототипом header файла
** (это сделано для стандартизации работы проекта).
**
** !!! В случае отсутствия у модуля каких-либо зависимостей необходимо сделать его
** как можно скорее и отправить на проверку !!!
**
** Желаю успехов, боец
** (-_-)
*/
#include <cassert>
#include "head.h"

int degPtoN(const LongP& polynomial)
{
    return polynomial.deg; // выводим степень данного многочлена
}

int main()
{
    LongP p1 = { 0 };
    p1.deg = 2;
    p1.odds[0] = { {1, 6,{0,0,0,0,0,0,1}}, { 0,{8} }, };
    p1.odds[1] = { {1, 6,{0,0,0,0,0,0,1}}, { 0,{8} }, };
    p1.odds[2] = { {1, 6,{0,0,0,0,0,0,1}}, { 0,{8} }, };

    LongP p2 = { 0 };
    p2.deg = 1;
    p2.odds[0] = { {1, 6,{0,0,0,0,0,0,1}}, { 0,{8} }, };
    p2.odds[1] = { {1, 6,{0,0,0,0,0,0,1}}, { 0,{8} }, };

    int res1 = 2;
    int res2 = 1;

    assert(degPtoN(p1) == res1);
    assert(degPtoN(p2) == res2);

    return 0;
}
